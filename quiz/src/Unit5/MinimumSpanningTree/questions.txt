1.
Question 1
Bottleneck minimum spanning tree. Given a connected edge-weighted graph, design an efficient algorithm to find a minimum bottleneck spanning tree. The bottleneck capacity of a spanning tree is the weights of its largest edge. A minimum bottleneck spanning tree is a spanning tree of minimum bottleneck capacity.

Hint: prove that an MST is a minimum bottleneck spanning tree.

Extra challenge: Compute a minimum bottleneck spanning tree in linear time in the worst case. Assume that you can compute the median of nn keys in linear time in the worst case.


2.
Question 2
Is an edge in a MST. Given an edge-weighted graph GG and an edge ee, design a linear-time algorithm to determine whether ee appears in some MST of GG.

Note: Since your algorithm must take linear time in the worst case, you cannot afford to compute the MST itself.

Hint: consider the subgraph G' of G containing only those edges whose weight is strictly less than that of ee.


3.
Question 3
Minimum-weight feedback edge set. A feedback edge set of a graph is a subset of edges that contains at least one edge from every cycle in the graph. If the edges of a feedback edge set are removed, the resulting graph is acyclic. Given an edge-weighted graph, design an efficient algorithm to find a feedback edge set of minimum weight. Assume the edge weights are positive.

Hint: complement of an MST.